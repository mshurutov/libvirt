---

- name: set any variables
  ansible.builtin.include_vars: "{{ libvirt_vars_dir }}/lxd.yml"
  tags: lxd_init,lxd_config,lxd_storage,lxd_networks,lxd_profiles,lxd_projects,lxd_vms

- name: init LXD service
  ansible.builtin.command: lxd init --minimal
  when: lxd_init_force is defined and lxd_init_force | bool
  tags: lxd_init

# lxd_config was created from lxd_network, so it srored localy on the role
# and it used by name only no Fully Qualified Collection Name (FQCN)
- name: show lxd_config
  debug:
    msg: "{{ lxd_storage_pools }}"
  tags: lxd_config
- name: set new lxd config parameters
  lxd_config:
    config: "{{ lxd_config }}"
  tags: lxd_config

# lxd_storage was created from lxd_network, so it srored localy on the role
# and it used by name only no Fully Qualified Collection Name (FQCN)
- name: storage pool settings
  lxd_storage:
    client_cert: "{{ lxd_client_cert | default(omit) }}"
    client_key: "{{ lxd_client_key | default(omit) }}"
    config: "{{ item.config }}"
    description: "{{ item.description | default(omit)}}"
    driver: "{{ item.driver | default('bridge') }}"
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    trust_password: "{{ item.trust_password | default(omit) }}"
    url: "{{ item.url | default(omit) }}"
  loop: "{{ lxd_storage_pools }}"
  tags: lxd_storage

# lxd_network is downloaded and stored onto local library directory
# from https://github.com/Nani-o/ansible-role-lxd/blob/master/library/lxd_network.py
# and it used by name only no Fully Qualified Collection Name (FQCN)
# follow this module was edited by Mikhail Shurutov
- name: network settings
  lxd_network:
    client_cert: "{{ lxd_client_cert | default(omit) }}"
    client_key: "{{ lxd_client_key | default(omit) }}"
    config: "{{ item.config }}"
    description: "{{ item.description | default(omit)}}"
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    trust_password: "{{ item.trust_password | default(omit) }}"
    type: "{{ item.type | default('bridge') }}"
    url: "{{ item.url | default(omit) }}"
  loop: "{{ lxd_networks }}"
  tags: lxd_networks
  
# Renaming network in same task with change other setting was failed
# so rename is in separate task
- name: rename network
  lxd_network:
    name: "{{ item.name }}"
    new_name: "{{ item.new_name }}"
  loop: "{{ lxd_networks }}"
  when: item.new_name is defined and lxd_network_rename_force is defined and lxd_network_rename_force | bool
  tags: lxd_networks_rename
  
- name: set lxd profiles
  community.general.lxd_profile:
    client_cert: "{{ lxd_client_cert | default(omit) }}"
    client_key: "{{ lxd_client_key | default(omit) }}"
    config: "{{ item.config | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    devices: "{{ item.devices | default(omit) }}"
    merge_profile: "{{ true if lxd_profiles_merge is defined and ( lxd_profiles_merge | bool ) else false }}"
    name: "{{ item.name }}"
    new_name: "{{ item.new_name | default(omit) }}"
    project: "{{ item.project | default(omit) }}"
    snap_url: "{{ item.snap_url | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    trust_password: "{{ item.trust_password | default(omit) }}"
    url: "{{ item.url | default(omit) }}"
  when: lxd_profiles is defined and lxd_profiles | length > 0
  loop: "{{ lxd_profiles }}"
  tags: lxd_profiles

- name: set lxd projects
  community.general.lxd_project:
    client_cert: "{{ item.client_cert | default(omit) }}"
    client_key: "{{ item.client_key | default(omit) }}"
    config: "{{ item.config | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    merge_profile: "{{ item.merge_profile | default(omit) }}"
    name: "{{ item.name }}"
    new_name: "{{ item.new_name | default(omit) }}"
    snap_url: "{{ item.snap_url | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    trust_password: "{{ item.trust_password | default(omit) }}"
    url: "{{ item.url | default(omit) }}"
  when: lxd_projects is defined
  loop: "{{ lxd_projects }}"
  tags: lxd_projects

- name: create and start any containers
  community.general.lxd_container:
    architecture: "{{ item.architecture | default('x86_64') }}"
    client_cert: "{{ item.client_cert | default(omit) }}"
    client_key: "{{ item.client_key | default(omit) }}"
    config: "{{ item.config | default(omit) }}"
    devices: "{{ item.devices | default(omit) }}"
    ephemeral: "{{ item.ephemeral | default(omit) }}"
    force_stop: "{{ item.force_stop | default(omit) }}"
    ignore_volatile_options: "{{ item.ignore_volatile_options | default(omit) }}"
    name: "{{ item.name }}"
    profiles: "{{ item.profiles | default(omit) }}"
    project: "{{ item.project | default(omit) }}"
    snap_url: "{{ item.snap_url | default(omit) }}"
    source: "{{ item.source }}"
    state: "{{ item.state | default('stopped') }}"
    target: "{{ item.target | default(omit) }}"
    timeout: "{{ item.timeout | default(omit) }}"
    trust_password: "{{ item.trust_password | default(omit) }}"
    type: "{{ item.type | default('container') }}"
    url: "{{ item.url | default(omit) }}"
    wait_for_container: "{{ item.wait_for_container | default(omit) }}"
    wait_for_ipv4_addresses: "{{ item.wait_for_ipv4_addresses | default(omit) }}"
  loop: "{{ libvirt_lxd_hosts }}"
  tags: lxd_vms

# Install python
# on Debian Linux
- name: install python3 on debian based distro
  ansible.builtin.shell: "lxc exec {{ item.name }} -- apt install -y python3"
  loop: "{{ libvirt_lxd_hosts }}"
  when: item.source.alias | lower is regex('debian')
  tags: lxd_vm_python
# on Alt Linux
- name: install python3 on Alt Linux distro
  ansible.builtin.shell: "lxc exec {{ item.name }} -- apt-get install -y python3"
  loop: "{{ libvirt_lxd_hosts }}"
  when: item.source.alias | lower is regex('alt')
  tags: lxd_vm_python

# Set python interpreter
# On many distros
- name: set python as link to python3
  ansible.builtin.shell: "lxc exec {{ item.name }} -- update-alternatives --install /usr/bin/python python /usr/bin/python3 3"
  loop: "{{ libvirt_lxd_hosts }}"
  when: item.source.alias | lower is not regex('gentoo|alt')
  tags: lxd_vm_python
# On Alt Linux
- name: set python interpeter
  block:
  - name: edit alternative file
    ansible.builtin.shell: lxc exec {{ item.name }} -- bash -c 'echo -e "/usr/bin/python\t/usr/bin/python3\t200" > /etc/alternatives/packages.d/python'
    loop: "{{ libvirt_lxd_hosts }}"
  - name: validate alternative file
    ansible.builtin.shell: lxc exec {{ item.name }} -- alternatives-validate
    loop: "{{ libvirt_lxd_hosts }}"
  - name: apply new alternative
    ansible.builtin.shell: lxc exec {{ item.name }} -- alternatives-update
    loop: "{{ libvirt_lxd_hosts }}"
  when: item.source.alias | lower is regex('alt')
  tags: lxd_vm_python
